{"remainingRequest":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=css","dependencies":[{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/src/components/HelloWorld.vue","mtime":1642321279677},{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmgzIHsKICBtYXJnaW46IDQwcHggMCAwOwp9CnVsIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKfQpsaSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIG1hcmdpbjogMCAxMHB4Owp9CmEgewogIGNvbG9yOiAjNDJiOTgzOwp9Cg=="},{"version":3,"sources":["/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/src/components/HelloWorld.vue"],"names":[],"mappings":";AAyGA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAClB;AACA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACZ;AACA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,EAAE;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB","file":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/src/components/HelloWorld.vue","sourceRoot":"","sourcesContent":["<template>\n\n <div class=\"container fluid bg-secondary text-white bg-opacity-50\">\n    <div class=\"row my-5\"> <h3>Currency Exchange Rate Checker App</h3></div>\n    <div class=\"row mb-3\"> \n        <input v-model=\"userInput\" placeholder=\"Valyuta kodini yoki davlat nomini kiriting...\">\n    </div>\n    <div class=\"row mb-3\"> \n        <p>Natija: {{ userInputValue }}</p>\n      </div>\n    <!-- <div class=\"row mb-3\" v-for=\"ccy in currencies\" :key=\"ccy\">\n      <div class=\"col-3\"> {{ccy.nominal}} {{ccy.nameUz}} ({{ccy.currencyCode}})</div>\n      <div class=\"col-3\"> {{ccy.rate}} so`m </div>\n    </div> -->\n\n    <!-- <div class=\"row  mb-3\">\n        <div class=\"col-3\">\n            {{this.currency.uzs}}\n        </div>\n        <div class=\"col-3\">\n            {{this.currency.usd}}\n        </div>\n        <div class=\"col-3\">\n            {{this.currency.cny}}\n        </div>\n    </div> -->\n    <button type=\"button\" @click=\"update\" class=\"btn btn-primary mx-2\">Update rates</button>\n    <!-- <button type=\"button\" @click=\"reset\" class=\"btn btn-primary mx-2\">Reset</button> -->\n    \n    <h6 class=\"my-3\">Last updated: {{this.updateDate}}</h6>\n\n\n</div>\n</template>\n\n<script>\nconst axios = require('axios');\n\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      userInput:\"\",\n      userInputValue:\"\",\n      currencies: [],\n      ccy_dto:{\n        currencyCode: \"\",\n        nameUz: \"\",\n        nameEn: \"\",\n        nominal: 1,\n        rate: 0.0,\n        diff:0.0,\n        updatedAt:\"\"\n      },\n      updateDate: ''\n    }\n  },\n  watch:{\n    userInput: function(ccy){\n      let notFound = true;\n      for(let i=0; i < this.currencies.length; i++){\n        if(ccy == this.currencies[i].currencyCode || this.currencies[i].nameUz.startsWith(ccy)){\n          this.userInputValue = (this.currencies[i].nominal + \" \" +  this.currencies[i].nameUz + \" (\" +this.currencies[i].currencyCode+ \") \" + \" = \" + this.currencies[i].rate + \" so`m (\" + (this.currencies[i].diff > 0 ? ( \"+\" + this.currencies[i].diff) : this.currencies[i].diff) + \")\");\n          notFound = false;\n          break;\n        }\n      }\n      if(notFound){\n          this.userInputValue = \"Davlat nomi yoki valyuta kodiga mos natija topilmadi.\"\n      }\n      \n    }\n  },\n  mounted(){\n    this.update();\n    \n  },\n  methods: {\n        update: function(){\n            axios\n            .get(`http://localhost:3001/updaterates`)\n            .then((response) => {\n              console.log(response.data);\n              this.currencies = response.data;\n              // this.currency.usd = response.data.USD;\n              // this.currency.cny = response.data.CNY;\n              // this.baseCurrency = this.currency;\n              this.updateDate = new Date().toString();\n              \n            }).catch((error) =>{\n              console.log(error);\n            });\n        },\n        reset: function(){\n            this.userInput = \"\";\n        }\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}