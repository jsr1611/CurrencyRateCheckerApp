{"remainingRequest":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/babel-loader/lib/index.js!/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/src/components/HelloWorld.vue?vue&type=template&id=469af010&scoped=true","dependencies":[{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/src/components/HelloWorld.vue","mtime":1642321279677},{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/babel.config.js","mtime":1641227464704},{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHZNb2RlbFRleHQgYXMgX3ZNb2RlbFRleHQsIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcywgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhTY29wZUlkID0gZnVuY3Rpb24gX3dpdGhTY29wZUlkKG4pIHsKICByZXR1cm4gX3B1c2hTY29wZUlkKCJkYXRhLXYtNDY5YWYwMTAiKSwgbiA9IG4oKSwgX3BvcFNjb3BlSWQoKSwgbjsKfTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiY29udGFpbmVyIGZsdWlkIGJnLXNlY29uZGFyeSB0ZXh0LXdoaXRlIGJnLW9wYWNpdHktNTAiCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogICAgY2xhc3M6ICJyb3cgbXktNSIKICB9LCBbLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImgzIiwgbnVsbCwgIkN1cnJlbmN5IEV4Y2hhbmdlIFJhdGUgQ2hlY2tlciBBcHAiKV0sIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzMgPSB7CiAgY2xhc3M6ICJyb3cgbWItMyIKfTsKdmFyIF9ob2lzdGVkXzQgPSB7CiAgY2xhc3M6ICJyb3cgbWItMyIKfTsKdmFyIF9ob2lzdGVkXzUgPSB7CiAgY2xhc3M6ICJteS0zIgp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfaG9pc3RlZF8yLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLnVzZXJJbnB1dCA9ICRldmVudDsKICAgIH0pLAogICAgcGxhY2Vob2xkZXI6ICJWYWx5dXRhIGtvZGluaSB5b2tpIGRhdmxhdCBub21pbmkga2lyaXRpbmcuLi4iCiAgfSwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFRleHQsICRkYXRhLnVzZXJJbnB1dF1dKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsICJOYXRpamE6ICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLnVzZXJJbnB1dFZhbHVlKSwgMQogIC8qIFRFWFQgKi8KICApXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8ZGl2IGNsYXNzPVwicm93IG1iLTNcIiB2LWZvcj1cImNjeSBpbiBjdXJyZW5jaWVzXCIgOmtleT1cImNjeVwiPlxuICAgICAgPGRpdiBjbGFzcz1cImNvbC0zXCI+IHt7Y2N5Lm5vbWluYWx9fSB7e2NjeS5uYW1lVXp9fSAoe3tjY3kuY3VycmVuY3lDb2RlfX0pPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sLTNcIj4ge3tjY3kucmF0ZX19IHNvYG0gPC9kaXY+XG4gICAgPC9kaXY+ICIpLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPGRpdiBjbGFzcz1cInJvdyAgbWItM1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTNcIj5cbiAgICAgICAgICAgIHt7dGhpcy5jdXJyZW5jeS51enN9fVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbC0zXCI+XG4gICAgICAgICAgICB7e3RoaXMuY3VycmVuY3kudXNkfX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtM1wiPlxuICAgICAgICAgICAge3t0aGlzLmN1cnJlbmN5LmNueX19XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PiAiKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgdHlwZTogImJ1dHRvbiIsCiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnVwZGF0ZSAmJiAkb3B0aW9ucy51cGRhdGUuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIGNsYXNzOiAiYnRuIGJ0bi1wcmltYXJ5IG14LTIiCiAgfSwgIlVwZGF0ZSByYXRlcyIpLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgQGNsaWNrPVwicmVzZXRcIiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeSBteC0yXCI+UmVzZXQ8L2J1dHRvbj4gIiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImg2IiwgX2hvaXN0ZWRfNSwgIkxhc3QgdXBkYXRlZDogIiArIF90b0Rpc3BsYXlTdHJpbmcodGhpcy51cGRhdGVEYXRlKSwgMQogIC8qIFRFWFQgKi8KICApXSk7Cn0="},{"version":3,"sources":["/Users/jimhome_mac/IntelliJIDEAProjects/Spring/CurrencyExchangeApp/frontend/src/components/HelloWorld.vue"],"names":[],"mappings":";;;;;;;AAEM,EAAA,KAAK,EAAC;;;;sBACR,mBAAA,CAAwE,KAAxE,EAAwE;AAAnE,IAAA,KAAK,EAAC;AAA6D,GAAxE,EAAqB,C,aAAE,mBAAA,CAA2C,IAA3C,EAA2C,IAA3C,EAAI,oCAAJ,CAAF,CAArB,E;;AAAA,G;;;;AACK,EAAA,KAAK,EAAC;;;AAGN,EAAA,KAAK,EAAC;;;AAsBP,EAAA,KAAK,EAAC;;;uBA3Bb,mBAAA,CA8BK,KA9BL,EAAA,UAAA,EA8BK,CA7BF,UA6BE,EA5BF,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,C,gBADF,mBAAA,CAAuF,OAAvF,EAAuF;;aAAvE,KAAA,CAAA,S,GAAS,M;MAA8D;AAA5D,IAAA,WAAW,EAAC;AAAgD,GAAvF,E,IAAA,E;;AAAA,G,iBAAgB,KAAA,CAAA,S,GACd,CAFN,CA4BE,EAzBF,mBAAA,CAEQ,KAFR,EAAA,UAAA,EAEQ,CADJ,mBAAA,CAAmC,GAAnC,EAAmC,IAAnC,EAAG,aAAQ,gBAAA,CAAG,KAAA,CAAA,cAAH,CAAX,EAA4B;AAAA;AAA5B,GACI,CAFR,CAyBE,EAtBF,mBAAA,CAAA,gOAAA,CAsBE,EAjBF,mBAAA,CAAA,+RAAA,CAiBE,EANF,mBAAA,CAAwF,QAAxF,EAAwF;AAAhF,IAAA,IAAI,EAAC,QAA2E;AAAjE,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,MAAA,IAAA,QAAA,CAAA,MAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAA4D;AAAlD,IAAA,KAAK,EAAC;AAA4C,GAAxF,EAAmE,cAAnE,CAME,EALF,mBAAA,CAAA,0FAAA,CAKE,EAHF,mBAAA,CAAuD,IAAvD,EAAA,UAAA,EAAiB,mBAAc,gBAAA,CAAA,KAAO,UAAP,CAA/B,EAAgD;AAAA;AAAhD,GAGE,CA9BL,C","sourcesContent":["<template>\n\n <div class=\"container fluid bg-secondary text-white bg-opacity-50\">\n    <div class=\"row my-5\"> <h3>Currency Exchange Rate Checker App</h3></div>\n    <div class=\"row mb-3\"> \n        <input v-model=\"userInput\" placeholder=\"Valyuta kodini yoki davlat nomini kiriting...\">\n    </div>\n    <div class=\"row mb-3\"> \n        <p>Natija: {{ userInputValue }}</p>\n      </div>\n    <!-- <div class=\"row mb-3\" v-for=\"ccy in currencies\" :key=\"ccy\">\n      <div class=\"col-3\"> {{ccy.nominal}} {{ccy.nameUz}} ({{ccy.currencyCode}})</div>\n      <div class=\"col-3\"> {{ccy.rate}} so`m </div>\n    </div> -->\n\n    <!-- <div class=\"row  mb-3\">\n        <div class=\"col-3\">\n            {{this.currency.uzs}}\n        </div>\n        <div class=\"col-3\">\n            {{this.currency.usd}}\n        </div>\n        <div class=\"col-3\">\n            {{this.currency.cny}}\n        </div>\n    </div> -->\n    <button type=\"button\" @click=\"update\" class=\"btn btn-primary mx-2\">Update rates</button>\n    <!-- <button type=\"button\" @click=\"reset\" class=\"btn btn-primary mx-2\">Reset</button> -->\n    \n    <h6 class=\"my-3\">Last updated: {{this.updateDate}}</h6>\n\n\n</div>\n</template>\n\n<script>\nconst axios = require('axios');\n\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      userInput:\"\",\n      userInputValue:\"\",\n      currencies: [],\n      ccy_dto:{\n        currencyCode: \"\",\n        nameUz: \"\",\n        nameEn: \"\",\n        nominal: 1,\n        rate: 0.0,\n        diff:0.0,\n        updatedAt:\"\"\n      },\n      updateDate: ''\n    }\n  },\n  watch:{\n    userInput: function(ccy){\n      let notFound = true;\n      for(let i=0; i < this.currencies.length; i++){\n        if(ccy == this.currencies[i].currencyCode || this.currencies[i].nameUz.startsWith(ccy)){\n          this.userInputValue = (this.currencies[i].nominal + \" \" +  this.currencies[i].nameUz + \" (\" +this.currencies[i].currencyCode+ \") \" + \" = \" + this.currencies[i].rate + \" so`m (\" + (this.currencies[i].diff > 0 ? ( \"+\" + this.currencies[i].diff) : this.currencies[i].diff) + \")\");\n          notFound = false;\n          break;\n        }\n      }\n      if(notFound){\n          this.userInputValue = \"Davlat nomi yoki valyuta kodiga mos natija topilmadi.\"\n      }\n      \n    }\n  },\n  mounted(){\n    this.update();\n    \n  },\n  methods: {\n        update: function(){\n            axios\n            .get(`http://localhost:3001/updaterates`)\n            .then((response) => {\n              console.log(response.data);\n              this.currencies = response.data;\n              // this.currency.usd = response.data.USD;\n              // this.currency.cny = response.data.CNY;\n              // this.baseCurrency = this.currency;\n              this.updateDate = new Date().toString();\n              \n            }).catch((error) =>{\n              console.log(error);\n            });\n        },\n        reset: function(){\n            this.userInput = \"\";\n        }\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"sourceRoot":""}]}